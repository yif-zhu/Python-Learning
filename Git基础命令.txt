Git命令：

一、初次安装git需要配置用户名和邮箱：

$ git config --global user.name "your_name"
$ git config --global user.email "your_email@163.com"

二、然后生成密钥对

$ ssh-keygen -t rsa -C "your_email@youremail.com"
这里不用输入什么，直接回车返回就行

$ ssh -v git@github.com
查看生成的id_rsa.pub 路径，并将改文件内容加到github的setting中的SSH中

验证Key，执行下面，提示：Hi xxx! You've successfully authenticated, but GitHub does not provide shell access. 问题成功啦
$ ssh -T git@github.com 

1.初始化当前目录，git init命令把这个目录变成Git可以管理的仓库
$ git init

2.用命令git add告诉Git，把文件添加到仓库
$ git add a.txt			#将a.txt加入到暂存区
$ git add .				#将文件夹下的所有文件加入到暂存区
$ git add *.txt			#将所有txt文件加入到暂存区

3.用命令git rm告诉git,把文件从仓库中删除
$ git rm a.txt          #将a.txt从暂存区删除

4.用命令git commit告诉Git，把版本库里文件提交到仓库
$ git commit -m "说明信息"

5.用命令git push完成本地仓库与github项目仓库的同步
$ git push    #当目前使用的本地项目是直接从github clone的，可以直接运行

6.但当让本地的项目托管到github对应的项目时
$ git remote add origin git@github.com:yif-zhu/test.git  #对应的git项目的SSH地址
$ git push -u origin master 
如果报错，提示error: failed to push some refs to 'https://github.com/xxxx.git
则：有三种解决方案
1: 进行push前先将远程仓库pull到本地仓库
$ git pull origin master    #git pull --rebase origin master
$ git push -u origin master
 
2: 强制push本地仓库到远程 (这种情况不会进行merge, 强制push后远程文件可能会丢失 不建议使用此方法)
$ git push -u origin master -f
 
3: 避开解决冲突, 将本地文件暂时提交到远程新建的分支中
$ git branch [name]
# 创建完branch后, 再进行push
$ git push -u origin [name] 

